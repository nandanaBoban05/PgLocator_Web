// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PgLocator_web.Data;

#nullable disable

namespace PgLocator_web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240927061825_intialmigration")]
    partial class intialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PgLocator_web.Models.Login", b =>
                {
                    b.Property<int>("Lid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Lid"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Lid");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("PgLocator_web.Models.Media", b =>
                {
                    b.Property<int>("Mid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mid"));

                    b.Property<int>("Pid")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Mid");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("PgLocator_web.Models.Owner", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chatlink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lid")
                        .HasColumnType("int");

                    b.Property<string>("Ownername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Oid");

                    b.ToTable("Owner");

                    b.HasData(
                        new
                        {
                            Oid = 1,
                            Adress = "456 Elm Street, Springfield, IL, USA",
                            Chatlink = "https://chat.whatsapp.com/examplelink1",
                            Dob = "1990-04-15",
                            Email = "johndoe@example.com",
                            Lid = 1,
                            Ownername = "John",
                            Password = "John",
                            Phone = "+1234567890",
                            Whatsapp = "+1234567890"
                        },
                        new
                        {
                            Oid = 2,
                            Adress = "789 Maple Avenue, Springfield, IL, USA",
                            Chatlink = "https://chat.whatsapp.com/examplelink2",
                            Dob = "1985-09-20",
                            Email = "janesmith@example.com",
                            Lid = 102,
                            Ownername = "Jane",
                            Password = "Jane",
                            Phone = "+1987654321",
                            Whatsapp = "+1987654321"
                        },
                        new
                        {
                            Oid = 3,
                            Adress = "123 Oak Drive, Springfield, IL, USA",
                            Chatlink = "https://chat.whatsapp.com/examplelink3",
                            Dob = "1992-11-30",
                            Email = "alicejohnson@example.com",
                            Lid = 103,
                            Ownername = "Alice",
                            Password = "Alice",
                            Phone = "+1123456789",
                            Whatsapp = "+1123456789"
                        },
                        new
                        {
                            Oid = 4,
                            Adress = "321 Pine Street, Springfield, IL, USA",
                            Chatlink = "https://chat.whatsapp.com/examplelink4",
                            Dob = "1988-05-12",
                            Email = "bobbrown@example.com",
                            Lid = 104,
                            Ownername = "Bob",
                            Password = "Bob",
                            Phone = "+1456789012",
                            Whatsapp = "+1456789012"
                        });
                });

            modelBuilder.Entity("PgLocator_web.Models.Pg", b =>
                {
                    b.Property<int>("Pgid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pgid"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Amentities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Foodavailable")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Meal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Oid")
                        .HasColumnType("int");

                    b.Property<string>("Pgname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pin")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rules")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Pgid");

                    b.ToTable("Pg");
                });

            modelBuilder.Entity("PgLocator_web.Models.Review", b =>
                {
                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rid"));

                    b.Property<int>("Pid")
                        .HasColumnType("int");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Reviewdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reviewteaxt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.HasKey("Rid");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("PgLocator_web.Models.Room", b =>
                {
                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rid"));

                    b.Property<int>("Availability")
                        .HasColumnType("int");

                    b.Property<int>("Deposit")
                        .HasColumnType("int");

                    b.Property<string>("Facility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pid")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Roomtype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Services")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Totalroom")
                        .HasColumnType("int");

                    b.HasKey("Rid");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("PgLocator_web.Models.User", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Uid"));

                    b.Property<string>("Dob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Uid = 1,
                            Dob = "1990-05-15",
                            Email = "alice.johnson@example.com",
                            Gender = "Female",
                            Lid = 1,
                            Name = "Alice Johnson",
                            Password = "Alice",
                            Phone = "123-456-7890",
                            Status = "Active"
                        },
                        new
                        {
                            Uid = 2,
                            Dob = "1988-09-22",
                            Email = "bob.smith@example.com",
                            Gender = "Male",
                            Lid = 2,
                            Name = "Bob Smith",
                            Password = "Bob",
                            Phone = "987-654-3210",
                            Status = "Inactive"
                        },
                        new
                        {
                            Uid = 3,
                            Dob = "1995-12-03",
                            Email = "charlie.brown@example.com",
                            Gender = "Male",
                            Lid = 3,
                            Name = "Charlie Brown",
                            Password = "Charlie",
                            Phone = "555-123-4567",
                            Status = "Active"
                        },
                        new
                        {
                            Uid = 4,
                            Dob = "1992-03-08",
                            Email = "diana.prince@example.com",
                            Gender = "Female",
                            Lid = 4,
                            Name = "Diana Prince",
                            Password = "Diana",
                            Phone = "444-987-6543",
                            Status = "Active"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
